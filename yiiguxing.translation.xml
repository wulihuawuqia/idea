<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="347" />
    <option name="newTranslationDialogWidth" value="692" />
    <option name="newTranslationDialogX" value="943" />
    <option name="newTranslationDialogY" value="298" />
    <histories>
      <item value="calcNormal" />
      <item value="strike" />
      <item value="strikePrice" />
      <item value="RefactorMemo" />
      <item value="BuyCommission" />
      <item value="remainQuantity" />
      <item value="strikeAmount" />
      <item value="BUST" />
      <item value="SHARES" />
      <item value="Normal" />
      <item value="DORMANCY" />
      <item value="costPrice" />
      <item value="fix" />
      <item value="fix&#10;" />
      <item value="f" />
      <item value="EXECUTION" />
      <item value="FIX_EXECUTION" />
      <item value="The underlying implementation of String::replaceAll calls the java.util.regex.Pattern.compile() method each time it is called even if the first argument is not a regular expression. This has a significant performance cost and therefore should be used with care.&#10;When String::replaceAll is used, the first argument should be a real regular expression. If it’s not the case, String::replace does exactly the same thing as String::replaceAll without the performance drawback of the regex.&#10;This rule raises an issue for each String::replaceAll used with a String as first parameter which doesn’t contains special regex character or pattern." />
      <item value="According to its JavaDocs, the intermediate Stream operation java.util.Stream.peek() “exists mainly to support debugging” purposes.&#10;A key difference with other intermediate Stream operations is that the Stream implementation is free to skip calls to peek() for optimization purpose. This can lead to peek() being unexpectedly called only for some or none of the elements in the Stream.&#10;As a consequence, relying on peek() without careful consideration can lead to error-prone code.&#10;This rule raises an issue for each use of peek() to be sure that it is challenged and validated by the team to be meant for production debugging/logging purposes." />
      <item value="Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain." />
      <item value="兼容" />
      <item value="变量" />
      <item value="白名单" />
      <item value="bai" />
      <item value="ignore&#10;" />
      <item value="ign&#10;" />
      <item value="忽略&#10;" />
      <item value="提取" />
      <item value="tui" />
      <item value="t" />
      <item value="判断" />
      <item value="判断&#10;" />
      <item value="pan'duan" />
      <item value="判段" />
      <item value="判duan" />
      <item value="判定" />
      <item value="pan'd" />
      <item value="pan" />
      <item value="deliverable" />
      <item value="deliver" />
      <item value="delive" />
      <item value="de" />
      <item value="灰度" />
      <item value="Hui" />
      <item value="Minutes" />
      <item value="小于" />
      <item value="x" />
      <item value="大于" />
      <item value="yu'da" />
      <item value="dayu" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="306" />
        <entry key="ENGLISH" value="232" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1663557464609" />
  </component>
  <component name="Settings">
    <option name="showActionsInContextMenuOnlyWithSelection" value="false" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>